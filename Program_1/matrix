#!/bin/bash

###############################################################################
##  Author:       Adam Wright
##  Email:        wrighada@oregonstate.edu
##  Date:         3-30-2020
##  Description:  Bash shell script with 5 callable functions
##                - dims [matrix] returns the dimensions of a valid matrix
##                - transpose [matrix] reflect the matrix elements MxN => NxM
##                - mean [matrix] returns means of each column of a matrix
##                - add [Matrix_left  Matrix_right] sums 2 equal dimension
##                  matrices element-wise
##                - multiply [Matrix_left  Matrix_right] returns to stdout the
##                  product of an MxN and NxP matrix and produce an MxP matrix 
###############################################################################


# Create unique temporary file
TMP="temp_file$$"

# A trap statement to erase TMP file on an interrupt signal
trap "rm -f $TMP; echo 'CTRL+C received, exiting'; exit 1" INT HUP TERM


greet="Hello World"


# NAME
#   dims - returns the dimension of a valid matrix
# SYNOPSIS
#   dims [matrix]
# DESCRIPTION
#   Returns the row count and column count separated by a space to stdout
#   when it is given a valid matrix from stdin or a file

dims()
{
    echo $greet

    exit 0
}


# NAME
#   transpose - reflect the matrix elements MxN => NxM
# SYNOPSIS
#   transpose [matrix]
# DESCRIPTION
#   Returns a new matrix to stdout with the elements reflected over the
#   diagonal when it is given a valid matrix from stdin or a file

transpose()
{
    echo $greet
    
    exit 0
}


# NAME
#   mean - returns the mean of each column of a valid matrix
# SYNOPSIS
#   mean [matrix]
# DESCRIPTION
#   Returns the mean of each column of a matrix to stdout when it is given
#   a valid matrix from stdin or a file

mean()
{
    echo $greet
    
    exit 0
}


# NAME
#   add - sums 2 equal dimension matrices element-wise
# SYNOPSIS
#   add [Matrix_left  Matrix_right]
# DESCRIPTION
#   Returns to stdout the matrix representing the element-wise sums of 2 equal
#   dimension matrices

add()
{
    echo $greet
    
    exit 0
}


# NAME
#   multiply - sums 2 equal dimension matrices element-wise
# SYNOPSIS
#   multiply [Matrix_left  Matrix_right]
# DESCRIPTION
#   Returns to stdout the product of an MxN and NxP matrix and to produce an
#   MxP matrix

multiply()
{
    echo $greet
    
    exit 0
}


# Validate the number of arguments
[ $# -lt 1 ] && echo "Invalid command: No arguments provided" >&2
[ $? -eq 0 ] && exit 2

[ $# -gt 3 ] && echo "Invalid command: Too many arguments provided" >&2
[ $? -eq 0 ] && exit 3

# Validate the passed in array




# Use TMP to hold the value of stdin or an existing file
if [ "$#" = "1" ]
then
    cat > "$TMP"
elif [ "$#" = "2" ]
then
    TMP=$2
fi


# Call the requested bash function in arg 1 with all remaining arguments
case $1 in
    dims)
        $1 "${@:2}"
    ;;
    transpose)
        $1 "${@:2}"
    ;;
    mean)
        $1 "${@:2}"
    ;;
    add)
        $1 "${@:2}"
    ;;
    multiply)
        $1 "${@:2}"
    ;;
    *)
        echo "No valid function called, exiting" 1>&2
        exit 4
    ;;
esac

# Remove temp file
rm -f "temp_file$$"
